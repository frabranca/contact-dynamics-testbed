"""LCM type definitions
This file automatically generated by lcm.
DO NOT MODIFY BY HAND!!!!
"""

try:
    import cStringIO.StringIO as BytesIO
except ImportError:
    from io import BytesIO
import struct

class command(object):
    __slots__ = ["tau_J_d", "K_P", "K_D"]

    __typenames__ = ["double", "double", "double"]

    __dimensions__ = [[7], [7], [7]]

    def __init__(self):
        self.tau_J_d = [ 0.0 for dim0 in range(7) ]
        self.K_P = [ 0.0 for dim0 in range(7) ]
        self.K_D = [ 0.0 for dim0 in range(7) ]

    def encode(self):
        buf = BytesIO()
        buf.write(command._get_packed_fingerprint())
        self._encode_one(buf)
        return buf.getvalue()

    def _encode_one(self, buf):
        buf.write(struct.pack('>7d', *self.tau_J_d[:7]))
        buf.write(struct.pack('>7d', *self.K_P[:7]))
        buf.write(struct.pack('>7d', *self.K_D[:7]))

    def decode(data):
        if hasattr(data, 'read'):
            buf = data
        else:
            buf = BytesIO(data)
        if buf.read(8) != command._get_packed_fingerprint():
            raise ValueError("Decode error")
        return command._decode_one(buf)
    decode = staticmethod(decode)

    def _decode_one(buf):
        self = command()
        self.tau_J_d = struct.unpack('>7d', buf.read(56))
        self.K_P = struct.unpack('>7d', buf.read(56))
        self.K_D = struct.unpack('>7d', buf.read(56))
        return self
    _decode_one = staticmethod(_decode_one)

    _hash = None
    def _get_hash_recursive(parents):
        if command in parents: return 0
        tmphash = (0xa49066415ea3f5c5) & 0xffffffffffffffff
        tmphash  = (((tmphash<<1)&0xffffffffffffffff) + (tmphash>>63)) & 0xffffffffffffffff
        return tmphash
    _get_hash_recursive = staticmethod(_get_hash_recursive)
    _packed_fingerprint = None

    def _get_packed_fingerprint():
        if command._packed_fingerprint is None:
            command._packed_fingerprint = struct.pack(">Q", command._get_hash_recursive([]))
        return command._packed_fingerprint
    _get_packed_fingerprint = staticmethod(_get_packed_fingerprint)

